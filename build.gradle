apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'maven-publish'

repositories {
	mavenLocal()
	mavenCentral()
}

allprojects  {
	group = 'org.netf.otd.source-code-dialect'
	version = '0.1.0-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

dependencies {
	compile group: 'org.projectlombok', name: 'lombok', version:'1.18.4'
	compile group: 'org.apache.commons', name: 'commons-lang3', version:'3.8.1'
	compile group: 'org.apache.commons', name: 'commons-text', version: '1.6'
	compile group: 'commons-beanutils', name: 'commons-beanutils', version:'1.9.3'
	compile group: 'commons-io', name: 'commons-io', version:'2.6'
	compile group: 'org.thymeleaf', name: 'thymeleaf', version:'3.0.11.RELEASE'
	testCompile group: 'junit', name: 'junit', version: '4.12'
}

sourceSets.test.output.resourcesDir = sourceSets.test.output.classesDir

eclipse {
	classpath {
		defaultOutputDir = file('build/classes/java/main')

		file {
        	whenMerged {
	        	entries.each { source ->
					if (source.kind == 'src' && !source.path.startsWith('/')) {
						// only Source-folders in the project starting with '/' are project-references
						source.output = null
        			}
				}
    	    }
	    }
	}
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
    repositories {
        maven {
            url "$System.env.USERPROFILE/.m2/repository"
        }
    }
}

